#include <bits/stdc++.h>
#include <string>
#include <stack>
#include <ostream>
using namespace std;

// Complete the isBalanced function below.
string isBalanced(string s) {
    char c;
    std::stack<char> ch;
    for (int i = 0; i < s.length(); i++) {
        c = s[i];
        if (ch.empty()) {
            ch.push(c);
        }
        else if (ch.top() == '(' && c == ')' || ch.top() == '{' && c == '}' || ch.top() == '[' && c == ']')
        {
            ch.pop();
        }
        else
            ch.push(c);
     }
    
    if (ch.empty())
        return  "YES";
    else
        return "NO";
}
class Name {
public:
    Name(std::string nm,  std::string sn)
     :n(nm)
     ,s(nm)
    {}
    Name(const Name& n)
    {
        this->n = n.n;
        this->s = n.s;
    }
    friend std::ostream& operator<<(std::ostream& os, const Name& dt);
private:
    std::string n;
    std::string s;
  };
std::ostream& operator<<(std::ostream& os, const Name& dt)
{
    os << dt.n << '/'  << '/' << dt.s;
    return os;
}
int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int t;
    cin >> t;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    for (int t_itr = 0; t_itr < t; t_itr++) {
        string s;
        getline(cin, s);

        string result = isBalanced(s);

        fout << result << "\n";
    }

    fout.close();

    return 0;
}
